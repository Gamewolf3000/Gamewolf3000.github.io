{"version":3,"sources":["styles/colors.js","styles/mainTheme.js","styles/components/layout.js","components/layout.jsx","styles/views/home.js","styles/components/project.js","components/project.jsx","views/home.jsx","styles/views/contact.js","views/contact.jsx","routes.jsx","serviceWorker.js","index.js"],"names":["colors","background","navbar","body","bodyText","linkedIn","dark","light","mainTheme","createMuiTheme","palette","type","default","overrides","typography","style","theme","createStyles","root","height","position","display","justifyContent","backgroundColor","paddingBottom","maxWidth","margin","marginTop","color","footer","alignItems","width","bottom","left","withStyles","children","classes","history","useHistory","Grid","container","className","CssBaseline","AppBar","Toolbar","Button","onClick","replace","Typography","item","sm","paper","padding","linkeInWrapper","marginBottom","linkedInButton","black","linkedInColors","imageWrapper","image","button","title","description","path","justify","Paper","xs","textPrimary","variant","align","window","location","onNavigate","src","alt","frameborder","allowfullscreen","profileImage","emailWrapper","mailto","marginLeft","href","Routes","ThemeProvider","exact","render","to","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.058a186a.chunk.js","sourcesContent":["const colors = {\n    background: \"#0b4273\",\n    navbar: \"#343A40\",\n    body: \"#343A40\",\n    bodyText: \"#ffffff\",\n    linkedIn: \"#3474AF\",\n    dark: \"#000000\",\n    light: \"#ffffff\",\n}\n\nexport default colors\n","import { createMuiTheme } from \"@material-ui/core/styles\";\nimport colors from \"styles/colors\";\n\nconst mainTheme = createMuiTheme(\n    {\n        palette: {\n            type: \"dark\",\n            background: {\n                default: colors.background,\n            },\n        },\n        overrides: {\n        },\n        typography: {\n        },\n    },\n);\n\nexport default mainTheme;\n","import { createStyles } from \"@material-ui/core/styles\"\nimport colors from \"styles/colors\"\n\nconst style = (theme) =>\n    createStyles({\n        root: {\n            height: \"100%\",\n            position: \"relative\",\n        },\n        navbar: {\n            display: \"flex\",\n            justifyContent: \"center\",\n            backgroundColor: colors.navbar,\n        },\n        body: {\n            paddingBottom: \"80px\",\n            maxWidth: \"876px\",\n            margin: \"auto\",\n            marginTop: \"30px\",\n            backgroundColor: colors.background,\n            color: colors.bodyText,\n        },\n        footer: {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            marginTop: \"20px\",\n            backgroundColor: colors.body,\n            color: colors.light,\n            width: \"100%\",\n            height: \"50px\",\n            position: \"absolute\",\n            bottom: 0,\n            left: 0,\n        }\n    })\n\nexport default style\n","import React from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport { withStyles } from \"@material-ui/core/styles\"\nimport AppBar from \"@material-ui/core/AppBar\"\nimport Toolbar from \"@material-ui/core/Toolbar\"\nimport Button from \"@material-ui/core/Button\"\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Typography from \"@material-ui/core/Typography\"\nimport style from \"styles/components/layout\"\n\nfunction Layout({ children, classes }) {\n    const history = useHistory()\n\n    return (\n        <Grid container className={classes.root}>\n            <CssBaseline />\n            <AppBar position=\"sticky\">\n                <Toolbar className={classes.navbar}>\n                    <Button\n                        onClick={() => history.replace(\"/\")}\n                    >\n                        <Typography color=\"textPrimary\">Home</Typography>\n                    </Button>\n                    <Button\n                        onClick={() => history.replace(\"/contact\")}\n                    >\n                        <Typography color=\"textPrimary\">Contact</Typography>\n                    </Button>\n                </Toolbar>\n            </AppBar>\n            <Grid item sm={12} className={classes.body}>\n                {children}\n            </Grid>\n            <Grid item sm={12} className={classes.footer}>\n                Copyright © Joakim Ståhle-Nilsson 2020\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default withStyles(style)(Layout)\n","import { createStyles } from \"@material-ui/core/styles\"\nimport colors from \"styles/colors\"\n\nconst style = (theme) =>\n    createStyles({\n        paper: {\n            backgroundColor: colors.body,\n            color: colors.bodyText,\n            padding: \"20px\",\n        },\n        linkeInWrapper: {\n            marginTop: \"20px\",\n            marginBottom: \"20px\",\n        },\n        linkedInButton: {\n            color: colors.black,\n            backgroundColor: colors.linkedIn,\n        },\n        linkedInColors: {\n            backgroundColor: colors.linkedIn\n        },\n    })\n\nexport default style\n","import { createStyles } from \"@material-ui/core/styles\"\nimport colors from \"styles/colors\"\n\nconst style = (theme) =>\n    createStyles({\n        root: {\n            marginTop: \"20px\",\n            backgroundColor: colors.body,\n        },\n        paper: {\n            backgroundColor: colors.body,\n            color: colors.bodyText,\n            padding: \"20px\",\n        },\n        imageWrapper: {\n            display: \"flex\",\n            alignItems: \"center\"\n        },\n        image: {\n            maxWidth: \"100%\",\n        },\n        button: {\n            marginTop: \"20px\",\n            backgroundColor: colors.light,\n            color: colors.dark\n        }\n    })\n\nexport default style\n","import React from \"react\"\nimport { withStyles } from \"@material-ui/core/styles\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Button from \"@material-ui/core/Button\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Paper from \"@material-ui/core/Paper\"\nimport style from \"styles/components/project\"\n\nfunction Project({ title, description, image, path, classes }) {\n    const onNavigate = (path) => {\n        window.location = path\n    }\n\n    return (\n        <Grid container justify=\"center\" className={classes.root}>\n            <Paper className={classes.paper}>\n                <Grid container justify=\"space-between\">\n                    <Grid item xs={5}>\n                        <Typography textPrimary variant=\"h4\"align=\"left\">\n                            {title}\n                        </Typography>\n                        <Typography textPrimary variant=\"body1\">\n                            {description}\n                        </Typography>\n                        <Grid container xs={12} justify=\"center\">\n                            <Button\n                                className={classes.button}\n                                onClick={() => onNavigate(path)}\n                            >\n                                Find out more!\n                            </Button>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={6} className={classes.imageWrapper}>\n                        <img className={classes.image} src={image} alt=\"Project\" />\n                    </Grid>\n                </Grid>\n            </Paper>\n        </Grid>\n    )\n}\n\nexport default withStyles(style)(Project)\n","import React from \"react\"\nimport { withStyles } from \"@material-ui/core/styles\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Button from \"@material-ui/core/Button\"\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Paper from \"@material-ui/core/Paper\"\nimport style from \"styles/views/home\"\nimport Project from \"components/project\"\n\nfunction Home({ classes }) {\n    const onLinkedIn = () => {\n        window.location = \"https://www.linkedin.com/in/joakim-st%C3%A5hle-nilsson-b9b917122/\"\n    }\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                <Grid container sm={12} justify=\"center\">\n                    <Typography textPrimary variant=\"h3\" align=\"center\">\n                        Joakim Ståhle-Nilsson\n                </Typography>\n                <Typography textPrimary variant=\"body1\">\n                    A software developer with a focus on real-time systems, rendering, and game related applications.\n                </Typography>\n                </Grid>\n                <Grid container sm={12} justify=\"center\" className={classes.linkeInWrapper}>\n                    <Button\n                        className={classes.linkedInButton}\n                        onClick={() => onLinkedIn()}\n                    >\n                        Linked<LinkedInIcon />\n                    </Button>\n                </Grid>\n                <Grid container sm={12} justify=\"center\">\n                    <iframe\n                        title=\"Showreel\"\n                        width=\"560\"\n                        height=\"315\"\n                        src=\"https://www.youtube.com/embed/Z67hGxX2dRU?controls=0\"\n                        frameborder=\"0\"\n                        allowfullscreen\n                    />\n                </Grid>\n            </Paper>\n            <Project\n                title=\"Direct3D 11 Viewer\"\n                description=\"My D3D11 Viewer project is capable of hooking into games using DirectX11 and analyze them. With this tool it is possible to for example se the\"\n                image=\"http://img.youtube.com/vi/VIZ59WWoPuc/0.jpg\"\n                path=\"https://github.com/Gamewolf3000/D3D11-Hook\"\n            />\n            <Project\n                title=\"Steelgear Engine 2D\"\n                description=\"The Steelgear Engine 2D (SGE2D) is a 2D game api that contains threaded rendering and scripting in an entity component based system.\"\n                image=\"/images/sg2d_example.png\"\n                path=\"https://github.com/Gamewolf3000/SteelgearEngine2D\"\n            />\n            <Project\n                title=\"Ray traced geometry rendering using compute shader\"\n                description=\"A ray traced scene of basic geometry rendered using a compute shader.\"\n                image=\"/images/rayTracer2.png\"\n                path=\"https://github.com/Gamewolf3000/D3D11RayTracer\"\n            />\n        </div>\n    )\n}\n\nexport default withStyles(style)(Home)\n","import { createStyles } from \"@material-ui/core/styles\"\nimport colors from \"styles/colors\"\n\nconst style = (theme) =>\n    createStyles({\n        paper: {\n            backgroundColor: colors.body,\n            color: colors.bodyText,\n            padding: \"20px\",\n        },\n        linkeInWrapper: {\n            marginTop: \"20px\",\n            marginBottom: \"20px\",\n        },\n        linkedInButton: {\n            color: colors.black,\n            backgroundColor: colors.linkedIn,\n        },\n        linkedInColors: {\n            backgroundColor: colors.linkedIn\n        },\n        profileImage: {\n            maxWidth: \"100%\",\n        },\n        emailWrapper: {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n        },\n        mailto: {\n            marginLeft: \"20px\",\n            color: colors.black,\n            backgroundColor: colors.linkedIn,\n        }\n    })\n\nexport default style\n","import React from \"react\"\nimport { withStyles } from \"@material-ui/core/styles\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Button from \"@material-ui/core/Button\"\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\"\nimport Grid from \"@material-ui/core/Grid\"\nimport EmailIcon from \"@material-ui/icons/Email\"\nimport Paper from \"@material-ui/core/Paper\"\nimport style from \"styles/views/contact\"\n\nfunction Contact({ classes }) {\n    const onLinkedIn = () => {\n        window.location = \"https://www.linkedin.com/in/joakim-st%C3%A5hle-nilsson-b9b917122/\"\n    }\n\n    const onMailTo = () => {\n        window.location.href = \"mailto:joakimthegamer@yahoo.se\"\n    }\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                <Grid container sm={12} justify=\"center\">\n                    <img className={classes.profileImage} src=\"images/profile_image2.jpg\" alt=\"Profile\" />\n\n                </Grid>\n                <Grid container sm={12} justify=\"center\" className={classes.emailWrapper}>\n                    <Typography textPrimary variant=\"h5\">\n                        Please contact me one of the following way's.\n                    </Typography>\n                </Grid>\n                <Grid container sm={12} justify=\"center\" className={classes.emailWrapper}>\n                    <Typography textPrimary variant=\"body1\">\n                        joakimthegamer@yahoo.se\n                    </Typography>\n                    <Button\n                        className={classes.mailto}\n                        onClick={() => onMailTo()}\n                    >\n                        <EmailIcon />\n                    </Button>\n                </Grid>\n                <Grid container sm={12} justify=\"center\" className={classes.linkeInWrapper}>\n                    <Button\n                        className={classes.linkedInButton}\n                        onClick={() => onLinkedIn()}\n                    >\n                        Linked<LinkedInIcon />\n                    </Button>\n                </Grid>\n            </Paper>\n        </div>\n    )\n}\n\nexport default withStyles(style)(Contact)\n","import React from \"react\"\nimport { Switch, HashRouter, Redirect, Route } from \"react-router-dom\"\nimport { ThemeProvider } from \"@material-ui/core/styles\"\nimport mainTheme from \"styles/mainTheme.js\"\nimport Layout from \"components/layout\"\nimport Home from \"views/home\"\nimport Contact from \"views/contact\"\n\nfunction Routes() {\n    return (\n        <ThemeProvider theme={mainTheme}>\n            <HashRouter>\n                <Switch>\n                    <Route\n                        exact\n                        path=\"/\"\n                        render={() => (\n                            <Layout>\n                                <Home />\n                            </Layout>\n                        )}\n                    />\n                    <Route\n                        exact\n                        path=\"/contact\"\n                        render={() => (\n                            <Layout>\n                                <Contact />\n                            </Layout>\n                        )}\n                    />\n                    <Redirect to=\"/\" />\n                </Switch>\n            </HashRouter>\n        </ThemeProvider>\n    );\n}\n\nexport default Routes\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Routes from \"routes\";\nimport * as serviceWorker from \"serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Routes />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}